rvest
install.packages("rvest")
competitor_url <- "https://www.spaceweatherlive.com/en/solar-activity/top-50-solar-flares"
competitor_data <- competitor_url %>% read_html() %>% html_node(".table") %>% html_table()
names(competitor_data)[1] <- "rank"
names(competitor_data)[2] <- "flare_classification"
names(competitor_data)[3] <- "date"
names(competitor_data)[4] <- "flare_region"
names(competitor_data)[5] <- "start_time"
names(competitor_data)[6] <- "max_time"
names(competitor_data)[7] <- "end_time"
names(competitor_data)[8] <- "movie"
as_tibble(competitor_data)
library(rvest)
library(lubridate)
library(tidyverse)
competitor_url <- "https://www.spaceweatherlive.com/en/solar-activity/top-50-solar-flares"
competitor_data <- competitor_url %>% read_html() %>% html_node(".table") %>% html_table()
names(competitor_data)[1] <- "rank"
names(competitor_data)[2] <- "flare_classification"
names(competitor_data)[3] <- "date"
names(competitor_data)[4] <- "flare_region"
names(competitor_data)[5] <- "start_time"
names(competitor_data)[6] <- "max_time"
names(competitor_data)[7] <- "end_time"
names(competitor_data)[8] <- "movie"
as_tibble(competitor_data)
competitor_data$movie <- NULL
competitor_data <- competitor_data %>% mutate(start_datetime=ymd_hm(paste(date, start_time, sep = " ")), max_datetime=ymd_hm(paste(date, max_time, sep = " ")), end_datetime=ymd_hm(paste(date, end_time, sep = " ")))
competitor_data$date <- NULL
competitor_data$start_time <- NULL
competitor_data$max_time <- NULL
competitor_data$end_time <- NULL
competitor_data <- competitor_data[c(1, 2, 4, 5, 6, 3)]
as_tibble(competitor_data)
nasa_url <- "https://cdaw.gsfc.nasa.gov/CME_list/radio/waves_type2.html"
nasa_data <- read.table(text=nasa_url %>% read_html() %>% html_node(xpath = "/html/body/pre") %>% html_text() %>% substr(stop=100000L, start=802) %>% str_replace_all("----------", "----- ----"), fill=TRUE, col.names=c("start_date", "start_time", "end_date", "end_time", "start_frequency", "end_frequency", "flare_location", "flare_region", "flare_classification", "cme_date", "cme_time", "cme_angle", "cme_width", "cme_speed", "phtx"), stringsAsFactors = F)
nasa_data$phtx <- NULL
nasa_data <- nasa_data %>% filter(str_detect(start_date, "\\d{4}\\/\\d{2}\\/\\d{2}"))
as_tibble(nasa_data)
nasa_data$start_frequency <- nasa_data$start_frequency %>% na_if("????")
nasa_data$flare_location <- nasa_data$flare_location %>% na_if("BACK")
nasa_data$flare_location <- nasa_data$flare_location %>% na_if("------")
nasa_data$flare_region <- nasa_data$flare_region %>% na_if("-----")
nasa_data$flare_classification <- nasa_data$flare_classification %>% na_if("----")
nasa_data$cme_date <- nasa_data$cme_date %>% na_if("--/--")
nasa_data$cme_time <- nasa_data$cme_time %>% na_if("--:--")
nasa_data$cme_angle <- nasa_data$cme_angle %>% na_if("----")
nasa_data$cme_width <- nasa_data$cme_width %>% na_if("----")
nasa_data$cme_speed <- nasa_data$cme_speed %>% na_if("----")
nasa_data$cme_width <- nasa_data$cme_width %>% na_if("---")
nasa_data$halo <- FALSE
nasa_data <- nasa_data %>% mutate(halo = ifelse(cme_angle == "Halo", TRUE, FALSE))
nasa_data$cme_angle <- nasa_data$cme_angle %>% na_if("Halo")
nasa_data$cme_width_limit <- FALSE
nasa_data <- nasa_data %>% mutate(cme_width_limit = ifelse(!is.na(cme_width) & substring(cme_width, 1, 1) == ">", TRUE, FALSE))
nasa_data <- nasa_data %>% mutate(cme_width = ifelse(!is.na(cme_width) & substring(cme_width, 1, 1) == ">", substring(cme_width, 2, 1000000L), cme_width))
nasa_data <- nasa_data %>% mutate(start_datetime=ymd_hm(paste(start_date, start_time, sep = " ")), end_datetime=ymd_hm(paste(paste(substring(start_date, 1, 4), end_date, sep="/"), end_time)), cme_datetime=ymd_hm(paste(paste(substring(start_date, 1, 4), cme_date, sep="/"), cme_time)))
nasa_data$start_date <- NULL
nasa_data$start_time <- NULL
nasa_data$end_date <- NULL
nasa_data$end_time <- NULL
nasa_data$cme_date <- NULL
nasa_data$cme_time <- NULL
nasa_data <- nasa_data[c(11, 12, 13, 1, 2, 3, 4, 5, 6, 8, 9, 7, 10)]
nasa_data$start_frequency <- as.integer(nasa_data$start_frequency)
nasa_data$end_frequency <- as.integer(as.character(nasa_data$end_frequency))
nasa_data$cme_angle <- as.integer(nasa_data$cme_angle)
nasa_data$cme_width <- as.integer(nasa_data$cme_width)
nasa_data$cme_speed <-as.integer(nasa_data$cme_speed)
as_tibble(nasa_data)
View(nasa_data)
View(competitor_data)
filter(nasa_data, substring(flare_classification, 1, 1) == "X")
temp <- filter(nasa_data, substring(flare_classification, 1, 1) == "X")
View(temp)
temp <- filter(nasa_data, substring(flare_classification, 1, 1) == "X") %>% arrange(as.numeric(substring(flare_classification, 2, 1000000L)))
View(temp)
temp <- filter(nasa_data, substring(flare_classification, 1, 1) == "X") %>% arrange(-1 * as.numeric(substring(flare_classification, 2, 1000000L)))
temp <- filter(nasa_data, substring(flare_classification, 1, 1) == "X") %>% arrange(-1 * as.numeric(substring(flare_classification, 2, 1000000L))) %>% head(50)
temp <- function(df) {}
temp <- function(df) {df}
temp(nasa_data)
date_fun <- function(d1, d2) {ifelse(d1 == d2, 1, 0)}
as.integer("28+")
region_fun <- function(r1, r2) {ifelse(ifelse(substring(r1, 1, 1) == "0" | substring(r1, 1, 1) == "1" | substring(r1, 1, 1) == "2", paste("1", r1, sep=""), r1) == r2, 1, 0)}
region_fun("FILA", "TEST")
region_fun("0486", "2343")
region_fun("0486", "10486")
region_fun("1486", "10486")
region_fun("1486", "11486")
start_date_fun <- function(d1, d2) {difftime(d1, d2, units="secs") ^ 2}
end_date_fun <- function(d1, d2) {difftime(d1, d2, units="secs") ^ 2}
nasa_url <- "https://www.hcbravo.org/IntroDataSci/misc/waves_type2.html"
nasa_data <- read.table(text=nasa_url %>% read_html() %>% html_node(xpath = "/html/body/pre") %>% html_text() %>% substr(stop=100000L, start=802), fill=TRUE, col.names=c("start_date", "start_time", "end_date", "end_time", "start_frequency", "end_frequency", "flare_location", "flare_region", "flare_classification", "cme_date", "cme_time", "cme_angle", "cme_width", "cme_speed", "phtx"), stringsAsFactors = F)
nasa_data$phtx <- NULL
nasa_data <- nasa_data %>% filter(str_detect(start_date, "\\d{4}\\/\\d{2}\\/\\d{2}"))
as_tibble(nasa_data)
nasa_data$start_frequency <- nasa_data$start_frequency %>% na_if("????")
nasa_data$flare_location <- nasa_data$flare_location %>% na_if("BACK")
nasa_data$flare_location <- nasa_data$flare_location %>% na_if("------")
nasa_data$flare_region <- nasa_data$flare_region %>% na_if("-----")
nasa_data$flare_classification <- nasa_data$flare_classification %>% na_if("----")
nasa_data$cme_date <- nasa_data$cme_date %>% na_if("--/--")
nasa_data$cme_time <- nasa_data$cme_time %>% na_if("--:--")
nasa_data$cme_angle <- nasa_data$cme_angle %>% na_if("----")
nasa_data$cme_width <- nasa_data$cme_width %>% na_if("----")
nasa_data$cme_speed <- nasa_data$cme_speed %>% na_if("----")
nasa_data$cme_width <- nasa_data$cme_width %>% na_if("---")
nasa_data$halo <- FALSE
nasa_data <- nasa_data %>% mutate(halo = ifelse(cme_angle == "Halo", TRUE, FALSE))
nasa_data$cme_angle <- nasa_data$cme_angle %>% na_if("Halo")
nasa_data$cme_width_limit <- FALSE
nasa_data <- nasa_data %>% mutate(cme_width_limit = ifelse(!is.na(cme_width) & substring(cme_width, 1, 1) == ">", TRUE, FALSE))
nasa_data <- nasa_data %>% mutate(cme_width = ifelse(!is.na(cme_width) & substring(cme_width, 1, 1) == ">", substring(cme_width, 2, 1000000L), cme_width))
nasa_data <- nasa_data %>% mutate(start_datetime=ymd_hm(paste(start_date, start_time, sep = " ")), end_datetime=ymd_hm(paste(paste(substring(start_date, 1, 4), end_date, sep="/"), end_time)), cme_datetime=ymd_hm(paste(paste(substring(start_date, 1, 4), cme_date, sep="/"), cme_time)))
nasa_data$start_date <- NULL
nasa_data$start_time <- NULL
nasa_data$end_date <- NULL
nasa_data$end_time <- NULL
nasa_data$cme_date <- NULL
nasa_data$cme_time <- NULL
nasa_data <- nasa_data[c(11, 12, 13, 1, 2, 3, 4, 5, 6, 8, 9, 7, 10)]
nasa_data$start_frequency <- as.integer(nasa_data$start_frequency)
nasa_data$end_frequency <- as.integer(as.character(nasa_data$end_frequency))
nasa_data$cme_angle <- as.integer(nasa_data$cme_angle)
nasa_data$cme_width <- as.integer(nasa_data$cme_width)
nasa_data$cme_speed <-as.integer(nasa_data$cme_speed)
as_tibble(nasa_data)
nasa_data[0][0]
nasa_data[0]['start_datetime']
nasa_data[0]$start_datetime
nasa_data[1]$start_datetime
nasa_data[1][1]
nasa_data[1,]
nasa_data[1,1]
flare_similarity <- function(e1, e2) {start_date_fun(e1$start_datetime[1,], e2$start_datetime[1,])}
flare_similarity(competitor_data[1,], nasa_data[1,])
competitor_data[1,]
temp <- competitor_data[1,]
temp$start_datetime
flare_similarity <- function(e1, e2) {start_date_fun(e1$start_datetime, e2$start_datetime)}
flare_similarity(competitor_data[1,], nasa_data[1,])
start_date_fun <- function(d1, d2) {4 - (difftime(d1, d2, units="days")) ^ 2}
flare_similarity <- function(e1, e2) {start_date_fun(e1$start_datetime, e2$start_datetime)}
flare_similarity(competitor_data[1,], nasa_data[1,])
flare_similarity <- function(e1, e2) {e1$start_datetime - e2$start_datetime}
flare_similarity(competitor_data[1,], nasa_data[1,])
flare_similarity <- function(e1, e2) {e1$start_datetime - e2$start_datetime - 34}
flare_similarity(competitor_data[1,], nasa_data[1,])
flare_similarity <- function(e1, e2) {e1$start_datetime - e2$start_datetime}
start_date_fun <- function(d1, d2) {(d1 - d2)^ 2)}
start_date_fun <- function(d1, d2) {(d1 - d2)^ 2}
start_date_fun(competitor_data[1,], nasa_data[1,])
start_date_fun <- function(e1, e2) {(d1$start_datetime - d2$start_datetime)^ 2}
start_date_fun(competitor_data[1,], nasa_data[1,])
start_date_fun <- function(e1, e2) {(e1$start_datetime - e2$start_datetime)^ 2}
start_date_fun(competitor_data[1,], nasa_data[1,])
start_date_fun <- function(e1, e2) {(e1$start_datetime - e2$start_datetime)}
start_date_fun(competitor_data[1,], nasa_data[1,])
as.double(start_date_fun(competitor_data[1,], nasa_data[1,]))
as.integer(start_date_fun(competitor_data[1,], nasa_data[1,]))
start_date_fun <- function(e1, e2) {as.integer(e1$start_datetime - e2$start_datetime) ^ 2}
start_date_fun(competitor_data[1,], nasa_data[1,])
region_fun <- function(e1, e2) {ifelse(ifelse(substring(e1$flare_classification, 1, 1) == "0" | substring(e1$flare_classification, 1, 1) == "1" | substring(e1$flare_classification, 1, 1) == "2", paste("1", e1$flare_classification, sep=""), e1$flare_classification) == e2$flare_classification, 1, 0)}
region_fun(competitor_data[1,], nasa_data[1,])
#sdlkfjsdlkf
start_date_fun <- function(e1, e2) {as.integer(e1$start_datetime - e2$start_datetime) ^ 2}
start_date_fun <- function(e1, e2) {as.integer(e1$end_datetime - e2$end_datetime) ^ 2}
region_fun <- function(e1, e2) {ifelse(ifelse(substring(e1$flare_classification, 1, 1) == "0" | substring(e1$flare_classification, 1, 1) == "1" | substring(e1$flare_classification, 1, 1) == "2", paste("1", e1$flare_classification, sep=""), e1$flare_classification) == e2$flare_classification, 1, 0)}
flare_similarity <- function(e1, e2) {start_date_fun(e1, e2) + end_date_fun(e1, e2) + region_fun(e1, e2)}
flare_similarity(competitor_data[1,], nasa_data[1,])
start_date_fun <- function(e1, e2) {as.integer(e1$start_datetime - e2$start_datetime) ^ 2}
end_date_fun <- function(e1, e2) {as.integer(e1$end_datetime - e2$end_datetime) ^ 2}
start_date_fun(competitor_data[1,], nasa_data[1,])
end_date_fun(competitor_data[1,], nasa_data[1,])
region_fun(competitor_data[1,], nasa_data[1,])
start_date_fun <- function(e1, e2) {as.integer(e1$start_datetime - e2$start_datetime) ^ 2}
end_date_fun <- function(e1, e2) {as.integer(e1$end_datetime - e2$end_datetime) ^ 2}
region_fun <- function(e1, e2) {ifelse(ifelse(substring(e1$flare_classification, 1, 1) == "0" | substring(e1$flare_classification, 1, 1) == "1" | substring(e1$flare_classification, 1, 1) == "2", paste("1", e1$flare_classification, sep=""), e1$flare_classification) == e2$flare_classification, 1, 0)}
flare_similarity <- function(e1, e2) {start_date_fun(e1, e2) + end_date_fun(e1, e2) + region_fun(e1, e2)}
flare_similarity(competitor_data[1,], nasa_data[1,])
flare_similarity(competitor_data[1,], nasa_data[243,])
flare_similarity(competitor_data[1,], nasa_data[120,])
start_date_fun(competitor_data[1,], nasa_data[120,])
start_date_fun <- function(e1, e2) {as.integer(e1$start_datetime - e2$start_datetime) ^ 2}
start_date_fun(competitor_data[2,], nasa_data[120,])
competitor_data[2,]$start_datetime
nasa_data[120,]$start_datetime
competitor_data[2,]$start_datetime - nasa_data[120,]$start_datetime
start_date_fun <- function(e1, e2) {as.integer(difftime(e1$start_datetime, e2$start_datetime), units = c("days")) ^ 2}
start_date_fun(competitor_data[2,], nasa_data[120,])
start_date_fun <- function(e1, e2) {difftime(e1$start_datetime, e2$start_datetime), units = c("days"))}
start_date_fun <- function(e1, e2) {as.integer(difftime(e1$start_datetime, e2$start_datetime, units = c("days")) ^ 2}
start_date_fun <- function(e1, e2) {as.integer(difftime(e1$start_datetime, e2$start_datetime, units = c("days"))) ^ 2}
start_date_fun(competitor_data[2,], nasa_data[120,])
start_date_fun <- function(e1, e2) {as.integer(difftime(e1$start_datetime, e2$start_datetime, units = c("days"))) ^ 2}
end_date_fun <- function(e1, e2) {as.integer(difftime(e1$end_datetime, e2$end_datetime, units = c("days"))) ^ 2}
region_fun <- function(e1, e2) {ifelse(ifelse(substring(e1$flare_classification, 1, 1) == "0" | substring(e1$flare_classification, 1, 1) == "1" | substring(e1$flare_classification, 1, 1) == "2", paste("1", e1$flare_classification, sep=""), e1$flare_classification) == e2$flare_classification, 1, 0)}
flare_similarity <- function(e1, e2) {start_date_fun(e1, e2) + end_date_fun(e1, e2) + region_fun(e1, e2)}
flare_similarity(competitor_data[2,], nasa_data[120,])
flare_similarity(competitor_data[2,], nasa_data[121,])
start_date_fun <- function(e1, e2) {as.integer(difftime(e1$start_datetime, e2$start_datetime, units = c("days"))) ^ 2}
start_date_fun(competitor_data[2,], nasa_data[120,])
start_date_fun(competitor_data[2,], nasa_data[121,])
start_date_fun(competitor_data[2,], nasa_data[34,])
start_date_fun <- function(e1, e2) {as.integer(difftime(e1$start_datetime, e2$start_datetime, units = c("days"))) ^ 2}
end_date_fun <- function(e1, e2) {as.integer(difftime(e1$end_datetime, e2$end_datetime, units = c("days"))) ^ 2}
region_fun <- function(e1, e2) {ifelse(ifelse(substring(e1$flare_classification, 1, 1) == "0" | substring(e1$flare_classification, 1, 1) == "1" | substring(e1$flare_classification, 1, 1) == "2", paste("1", e1$flare_classification, sep=""), e1$flare_classification) == e2$flare_classification, 1, 0)}
flare_similarity <- function(e1, e2) {start_date_fun(e1, e2) + end_date_fun(e1, e2) + region_fun(e1, e2)}
flare_similarity(competitor_data[2,], nasa_data[34,])
flare_similarity(competitor_data[2,], nasa_data[12,])
flare_similarity(competitor_data[2,], nasa_data[121,])
flare_similarity(competitor_data[2,], competitor_data[2,])
pnorm(qnorm(0.5, mean=0,
sd=1))
qnorm(0.5, 0, 1)
pnorm(0)
qnorm(0.5)
letters
paste("test", letters[1], sep="")
url <- "https://www.basketball-reference.com/players/a/"
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From")
library(dplyr)
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From")
library(rvest)
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From")
View(plyrs)
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href")
View(plyrprofs)
plyrprofs[1] <- NULL
plyrprofs[[1]] <- NULL
plyrprofs[-1]
View(plyrs)
View(plyrprofs)
View(plyrprofs[-1])
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From")
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href") %>% select(Player, From, To)
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From")
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href") %>% select(Player, From, To)
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From")
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href") %>% select(1)
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From") %>% select(1, 2, 3)
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href")
plyrprofs <- plyrprofs[-1]
all_plyrs <- cbind(plyrs, plyrprofs)
View(all_plyrs)
for (name in letters) {
url <- paste("https://www.basketball-reference.com/players/", name, sep="")
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From") %>% select(1, 2, 3)
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href")
plyrprofs <- plyrprofs[-1]
all_plyrs <- cbind(plyrs, plyrprofs)
write.csv(rosters, paste(paste('players/', name, sep=''), 'players', sep=''))
}
for (name in letters) {
url <- paste("https://www.basketball-reference.com/players/", name, sep="")
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From") %>% select(1, 2, 3)
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href")
plyrprofs <- plyrprofs[-1]
all_plyrs <- cbind(plyrs, plyrprofs)
write.csv(all_plyrs, paste(paste('players/', name, sep=''), 'players', sep=''))
}
setwd("~/Coding/NBA Graph")
for (name in letters) {
url <- paste("https://www.basketball-reference.com/players/", name, sep="")
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From") %>% select(1, 2, 3)
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href")
plyrprofs <- plyrprofs[-1]
all_plyrs <- cbind(plyrs, plyrprofs)
write.csv(all_plyrs, paste(paste('players/', name, sep=''), 'players', sep=''))
}
for (name in letters) {
url <- paste("https://www.basketball-reference.com/players/", name, sep="")
plyrs <- url %>% read_html() %>% html_node(".stats_table") %>% html_table() %>% filter(From != "From") %>% select(1, 2, 3)
plyrprofs <- url %>% read_html() %>% html_nodes("table") %>% html_nodes("tr") %>% html_node("a") %>% html_attr("href")
plyrprofs <- plyrprofs[-1]
all_plyrs <- cbind(plyrs, plyrprofs)
write.csv(all_plyrs, paste(paste('players/', name, sep=''), 'players.csv', sep=''))
}
